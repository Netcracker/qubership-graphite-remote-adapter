# Copyright 2024-2025 NetCracker Technology Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for graphite-remote-adapter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

install: true

## A name of a microservice to deploy with.
# This name will be used as name of the microservice deployment and in labels.
name: graphite-remote-adapter

## A Docker image to deploy the graphite_remote_adapter.
#image: ghcr.io/netcracker/qubership-graphite-remote-adapter:main

# Only pods which provide own keys can access the private registry.
# Default: []
#
imagePullSecrets: []

## Number of created pods.
# Type: integer
# Mandatory: no
# Default: 1
#
replicas: 1

## The resources describes the compute resource requests and limits for single Pod.
## Ref: https://kubernetes.io/docs/user-guide/compute-resources/
# Type: object
# Mandatory: no
resources:
  limits:
    cpu: 200m
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 100Mi

# Allows set extra system environment variables for graphite-remote-adapter.
# Type: map[string]string
# Mandatory: no
# Default: []
#
extraEnvs: {}

# Additional arguments for graphite-remote-adapter container.
# Type: list[string]
# Mandatory: no
# Default: []
#
extraArgs: []

serviceMonitor:
  ## Allow to disable create ServiceMonitor CR for graphite-remote-adapter during deploy
  # Type: object
  # Mandatory: no
  #
  install: false

  ## SecurityContext holds pod-level security attributes.
  # The parameters are required if a Pod Security Policy is enabled
  #  for Kubernetes cluster and required if a Security Context Constraints is enabled
  # for Openshift cluster.
  #
  # Mandatory: no
  # securityContext:
  ## The UID to run the entrypoint of the container process.
  # Defaults to user specified in image metadata if unspecified.
  #
  # Mandatory: no
  # runAsUser: 2000

  ## A special supplemental group that applies to all containers in a pod.
  # Some volume types allow the Kubelet to change the ownership of that volume
  # to be owned by the pod:
  #   1. The owning GID will be the FSGroup
  #   2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
  #   3. The permission bits are OR'd with rw-rw----
  # If unset, the Kubelet will not modify the ownership and permissions of any volume.
  #
  # Mandatory: no
  # fsGroup: 2000

# Allows to create Grafana dashboard for graphite-remote-adapter
# Type: boolean
# Mandatory: no
# Default: true
#
grafanaDashboard: true

## Port for graphite-remote-adapter service.
# Type: integer
# Mandatory: no
# Default: 9210
#
servicePort: 9201

## The host:port of the Graphite server to send samples to.
#
# Type: string
# Mandatory: no
# Default: localhost:9999
writeCarbonAddress: localhost:9999

## The URL of the remote Graphite Web server to send samples to.
#
# Type: string
# Mandatory: no
# Default: http://<username>:<password>@localhost:8080
readUrl: "http://localhost:8080"

## The prefix to prepend to all metrics exported to Graphite.
#
# Type: string
# Mandatory: no
# Default: ""
defaultPrefix: ""

## Enable using Graphite tags
#
# Type: boolean
# Mandatory: no
# Default: true
enableTags: true

## Additional Graphite Config.
#
# Type: object
# Mandatory: no
# example
#
# additionalGraphiteConfig:
#   web:
#     listen_address: "0.0.0.0:7701"
#     telemetry_path: "/metrics"
#   write:
#     timeout: 5m
#   read:
#     timeout: 5m
#     delay: 1h
#     ignore_error: true
#   graphite:
#     write:
#       carbon_transport: tcp
#       carbon_reconnect_interval: 5m
#       enable_paths_cache: true
#       paths_cache_ttl: 4h
#       paths_cache_purge_interval: 4h
#       template_data:
#         var1:
#           foo: bar
#         var2: foobar

## Tolerations allow the pods to schedule onto nodes with matching taints.
# Type: object
# Mandatory: no
#
tolerations: []

## Allow define which Nodes the Pods are scheduled on.
# Type: map[string]
# Mandatory: no
# Default: not set
#
# nodeSelector: {}
