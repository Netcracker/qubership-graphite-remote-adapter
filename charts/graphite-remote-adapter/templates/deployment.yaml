# Copyright 2024-2025 NetCracker Technology Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if and .Values.install }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    app.kubernetes.io/name: {{ .Values.name }}
    app.kubernetes.io/component: monitoring
spec:
  replicas: {{ default 1 .Values.replicas }}
  selector:
    matchLabels:
      app:  {{ .Values.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.name }}
        app: {{ .Values.name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: {{ template "graphite_remote_adapter.image" . }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /graphite-remote-adapter
          {{- if .Values.extraEnvs }}
          env:
            {{- range $key, $value := .Values.extraEnvs }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          args:
            - '--config.file=/graphite-remote-adapter/additionalGraphiteConfig.yaml'
            - '--graphite.write.carbon-address={{ .Values.writeCarbonAddress }}'
            - '--graphite.write.carbon-transport=tcp'
            - '--web.listen-address=0.0.0.0:9201'
            - '--graphite.read.url={{ .Values.readUrl }}'
            - '--graphite.default-prefix={{ .Values.defaultPrefix }}'
          {{- if .Values.enableTags }}
            - '--graphite.enable-tags'
          {{- end }}
          {{- if .Values.extraArgs }}
            {{- toYaml .Values.extraArgs | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 9201
              name: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
          terminationMessagePath: /dev/termination-log
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: graphite-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      {{- if .Values.securityContext }}
      securityContext:
        runAsUser: {{ default 2000 .Values.securityContext.runAsUser }}
        fsGroup: {{ default 2000 .Values.securityContext.fsGroup }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      serviceAccountName: {{ .Values.name }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- end }}
